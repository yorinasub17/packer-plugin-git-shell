// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatScript is an auto-generated flat version of Script.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatScript struct {
	Path            *string  `mapstructure:"path" cty:"path" hcl:"path"`
	Args            []string `mapstructure:"args" cty:"args" hcl:"args"`
	EnvironmentVars []string `mapstructure:"environment_vars" cty:"environment_vars" hcl:"environment_vars"`
}

// FlatMapstructure returns a new FlatScript.
// FlatScript is an auto-generated flat version of Script.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Script) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatScript)
}

// HCL2Spec returns the hcl spec of a Script.
// This spec is used by HCL to read the fields of Script.
// The decoded values from this spec will then be applied to a FlatScript.
func (*FlatScript) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"path":             &hcldec.AttrSpec{Name: "path", Type: cty.String, Required: false},
		"args":             &hcldec.AttrSpec{Name: "args", Type: cty.List(cty.String), Required: false},
		"environment_vars": &hcldec.AttrSpec{Name: "environment_vars", Type: cty.List(cty.String), Required: false},
	}
	return s
}
